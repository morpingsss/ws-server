apiVersion: v1
kind: Service
metadata:
  name: etcd
  labels:
    app: etcd
spec:
  ports:
    - port: 2379
      name: client
    - port: 2380
      name: peer
  clusterIP: None
  selector:
    app: etcd
---
apiVersion: apps/v1
kind: StatefulSet
metadata:
  name: etcd
  labels:
    app: etcd
spec:
  serviceName: "etcd" # 对应上面创建的 Headless Service
  replicas: 3
  selector:
    matchLabels:
      app: etcd
  template:
    metadata:
      labels:
        app: etcd
    spec:
      containers:
        - name: etcd
          image: registry-vpc.cn-shenzhen.aliyuncs.com/morpingsss/etcd:3.5.4
          ports:
            - containerPort: 2379
              name: client
            - containerPort: 2380
              name: peer
          args:
            - etcd
            - --name=$(POD_NAME)
            - --advertise-client-urls=http://$(POD_NAME).etcd:2379
            - --listen-client-urls=http://0.0.0.0:2379
            - --listen-peer-urls=http://0.0.0.0:2380
            - --initial-cluster-token=etcd-cluster
            - --initial-cluster=etcd-0=http://etcd-0.etcd:2380,etcd-1=http://etcd-1.etcd:2380,etcd-2=http://etcd-2.etcd:2380
            - --initial-cluster-state=new
          env:
            - name: POD_NAME
              valueFrom:
                fieldRef:
                  fieldPath: metadata.name
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: webapp
  labels:
    app: webapp
spec:
  replicas: 1
  selector:
    matchLabels:
      app: webapp
  template:
    metadata:
      labels:
        app: webapp
    spec:
      containers:
        - name: ws-server
          image: registry-vpc.cn-shenzhen.aliyuncs.com/morpingsss/ws-server-amd64:1.1.0
          ports:
            - containerPort: 6000
          args:
            - /data/ws-server/ws-server
            - -c
            - /data/ws-server/conf/app.cluster.ini
          env:
            - name: ETCD_ENDPOINTS
              value: "etcd-0.etcd:2379,etcd-1.etcd:2379,etcd-2.etcd:2379"
